<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.whk.db.entity.dao.PlayerDao">

    <resultMap type="com.whk.db.entity.entity.Player" id="PlayerMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="userAccountId" column="user_account_id" jdbcType="INTEGER"/>
        <result property="career" column="career" jdbcType="INTEGER"/>
        <result property="sex" column="sex" jdbcType="INTEGER"/>
        <result property="lastLogin" column="last_login" jdbcType="INTEGER"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="PlayerMap">
        select
          id, user_account_id, career, sex, last_login
        from player
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="PlayerMap">
        select
          id, user_account_id, career, sex, last_login
        from player
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="userAccountId != null">
                and user_account_id = #{userAccountId}
            </if>
            <if test="career != null">
                and career = #{career}
            </if>
            <if test="sex != null">
                and sex = #{sex}
            </if>
            <if test="lastLogin != null">
                and last_login = #{lastLogin}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from player
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="userAccountId != null">
                and user_account_id = #{userAccountId}
            </if>
            <if test="career != null">
                and career = #{career}
            </if>
            <if test="sex != null">
                and sex = #{sex}
            </if>
            <if test="lastLogin != null">
                and last_login = #{lastLogin}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into player(user_account_id, career, sex, last_login)
        values (#{userAccountId}, #{career}, #{sex}, #{lastLogin})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into player(user_account_id, career, sex, last_login)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.userAccountId}, #{entity.career}, #{entity.sex}, #{entity.lastLogin})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into player(user_account_id, career, sex, last_login)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.userAccountId}, #{entity.career}, #{entity.sex}, #{entity.lastLogin})
        </foreach>
        on duplicate key update
        user_account_id = values(user_account_id),
        career = values(career),
        sex = values(sex),
        last_login = values(last_login)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update player
        <set>
            <if test="userAccountId != null">
                user_account_id = #{userAccountId},
            </if>
            <if test="career != null">
                career = #{career},
            </if>
            <if test="sex != null">
                sex = #{sex},
            </if>
            <if test="lastLogin != null">
                last_login = #{lastLogin},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from player where id = #{id}
    </delete>

</mapper>

