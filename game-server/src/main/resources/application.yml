server:
  port: 6050  # web服务的端口

spring:
  application:
    name: game-server

  jpa:
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        hbm2ddl:
          auto: update

  datasource:
    dynamic:
      primary: master
      strict: false
      datasource:
        master:
          url: jdbc:mysql://localhost:3306/game-gateway?useUnicode=true&characterEncoding=utf8&allowMultiQueries=true&rewriteBatchedStatements=true&zeroDateTimeBehavior=convertToNull&useSSL=false&serverTimezone=GMT
          username: root
          password: Sogoun@2023
          driver-class-name: com.mysql.cj.jdbc.Driver
        slave:
          url: jdbc:mysql://localhost:3306/game-gateway?useUnicode=true&characterEncoding=utf8&allowMultiQueries=true&rewriteBatchedStatements=true&zeroDateTimeBehavior=convertToNull&useSSL=false&serverTimezone=GMT
          username: root
          password: Sogoun@2023
          driver-class-name: com.mysql.cj.jdbc.Driver

  cloud:
    bus:
      enabled: true
    stream:
      kafka:
        binder:
          brokers:
            - localhost:9092
          replication-factor: 1
  kafka:
    producer:
      key-serializer:
        org.apache.kafka.common.serialization.StringSerializer


# 服务注册与发现
eureka:
  client:
    register-with-eureka: true #被其它服务调用时需向Eureka注册
    fetch-registry: true #被其它服务调用时需向Eureka注册
    service-url:
      defaultZone: "http://127.0.0.1:5010/eureka"  #客户端与服务端交互地址，多个逗号隔开

  instance:
    prefer-ip-address: false #将自己的ip注册到Eureka服务中
    instance-id: ${spring.application.name}-${game.kafka-topic.server} #实例id
    metadata-map:
      id: ${game.kafka-topic.server}
      zone: ${game.kafka-topic.group-id}

game:
  kafka-topic:
    group-id: 1
    server: 2
    rpc-request-game-message-topic: "rpc-request-game-message-topic"
    rpc-response-game-message-topic: "rpc-response-game-message-topic"

